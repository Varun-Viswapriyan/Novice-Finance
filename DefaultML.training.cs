﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML.Transforms;
using Microsoft.ML;

namespace WebApplication4
{
    public partial class DefaultML
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new []{new InputOutputColumnPair(@"SEX", @"SEX"),new InputOutputColumnPair(@"EDUCATION", @"EDUCATION"),new InputOutputColumnPair(@"MARRIAGE", @"MARRIAGE")}, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"LIMIT_BAL", @"LIMIT_BAL"),new InputOutputColumnPair(@"AGE", @"AGE"),new InputOutputColumnPair(@"PAY_0", @"PAY_0"),new InputOutputColumnPair(@"PAY_2", @"PAY_2"),new InputOutputColumnPair(@"PAY_3", @"PAY_3"),new InputOutputColumnPair(@"PAY_4", @"PAY_4"),new InputOutputColumnPair(@"PAY_5", @"PAY_5"),new InputOutputColumnPair(@"PAY_6", @"PAY_6"),new InputOutputColumnPair(@"BILL_AMT1", @"BILL_AMT1"),new InputOutputColumnPair(@"BILL_AMT2", @"BILL_AMT2"),new InputOutputColumnPair(@"BILL_AMT3", @"BILL_AMT3"),new InputOutputColumnPair(@"BILL_AMT4", @"BILL_AMT4"),new InputOutputColumnPair(@"BILL_AMT5", @"BILL_AMT5"),new InputOutputColumnPair(@"BILL_AMT6", @"BILL_AMT6"),new InputOutputColumnPair(@"PAY_AMT1", @"PAY_AMT1"),new InputOutputColumnPair(@"PAY_AMT2", @"PAY_AMT2"),new InputOutputColumnPair(@"PAY_AMT3", @"PAY_AMT3"),new InputOutputColumnPair(@"PAY_AMT4", @"PAY_AMT4"),new InputOutputColumnPair(@"PAY_AMT5", @"PAY_AMT5"),new InputOutputColumnPair(@"PAY_AMT6", @"PAY_AMT6")}))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"SEX",@"EDUCATION",@"MARRIAGE",@"LIMIT_BAL",@"AGE",@"PAY_0",@"PAY_2",@"PAY_3",@"PAY_4",@"PAY_5",@"PAY_6",@"BILL_AMT1",@"BILL_AMT2",@"BILL_AMT3",@"BILL_AMT4",@"BILL_AMT5",@"BILL_AMT6",@"PAY_AMT1",@"PAY_AMT2",@"PAY_AMT3",@"PAY_AMT4",@"PAY_AMT5",@"PAY_AMT6"}))      
                                    .Append(mlContext.Regression.Trainers.FastForest(new FastForestRegressionTrainer.Options(){NumberOfTrees=70,NumberOfLeaves=66,FeatureFraction=0.898033F,LabelColumnName=@"default.payment.next.month",FeatureColumnName=@"Features"}));

            return pipeline;
        }
    }
}
